import { GoogleSpreadsheet } from "google-spreadsheet";
import { JWT } from "google-auth-library";

console.log("Starting Google Sheets as Db Test;");

const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email:
    "dbreaderserviceaccount@augmented-pager-406800.iam.gserviceaccount.com",
  key: process.env.GOOGLE_PRIVATE_KEY,
  scopes: ["https://www.googleapis.com/auth/spreadsheets"],
});

const doc = new GoogleSpreadsheet(
  "1Q2dqWuY7vlOLngPkbMJUyjwf8TOroX1P1yuyf3IVd_0",
  serviceAccountAuth,
);

await doc.loadInfo(); // loads document properties and worksheets
console.log("Working with sheet: ", doc.title);

const sheet = doc.sheetsByIndex[0]; // or use `doc.sheetsById[id]` or `doc.sheetsByTitle[title]`
console.log(sheet.title);
console.log(sheet.rowCount);

// append rows
const larryRow = await sheet.addRow({
  id: 3,
  name: "Larry Page",
  age: 45,
  email: "larry@google.com",
});
const moreRows = await sheet.addRows([
  { name: "Sergey Brin", id: 4, age: 99, email: "sergey@google.com" },
  { name: "Eric Schmidt", id: 5, age: 88, email: "eric@google.com" },
]);

// read rows
console.log("Getting roles");
console.time('get_rows');
const rows = await sheet.getRows(); // can pass in { limit, offset }
console.timeEnd('get_rows');

// read/write row values
console.log(rows[0].get("name")); // 'Larry Page'
rows[1].set("email", "sergey@abc.xyz"); // update a value

console.log("Does this work too?");
rows[2].assign({ name: "Sundar Pichai", email: "sundar@google.com" }); // set multiple values
await rows[2].save(); // save updates on a row
await rows[2].delete(); // delete a row
